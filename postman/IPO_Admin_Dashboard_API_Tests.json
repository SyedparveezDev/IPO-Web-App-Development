{
  "info": {
    "name": "IPO Admin Dashboard API Tests",
    "description": "Comprehensive API testing collection for IPO Administration Dashboard",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://127.0.0.1:8000",
      "type": "string"
    },
    {
      "key": "api_base",
      "value": "{{base_url}}/api",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Dashboard APIs",
      "item": [
        {
          "name": "Get Dashboard Stats",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{api_base}}/dashboard-stats/",
              "host": ["{{api_base}}"],
              "path": ["dashboard-stats", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has required fields', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('total_ipos');",
                  "    pm.expect(jsonData).to.have.property('upcoming_ipos');",
                  "    pm.expect(jsonData).to.have.property('ongoing_ipos');",
                  "    pm.expect(jsonData).to.have.property('new_listed_ipos');",
                  "});",
                  "",
                  "pm.test('Response time is less than 200ms', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Quick Links",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{api_base}}/quick-links/",
              "host": ["{{api_base}}"],
              "path": ["quick-links", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});",
                  "",
                  "pm.test('Links have required properties', function () {",
                  "    const jsonData = pm.response.json();",
                  "    if (jsonData.length > 0) {",
                  "        pm.expect(jsonData[0]).to.have.property('name');",
                  "        pm.expect(jsonData[0]).to.have.property('url');",
                  "        pm.expect(jsonData[0]).to.have.property('icon');",
                  "    }",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Company APIs",
      "item": [
        {
          "name": "Get All Companies",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{api_base}}/companies/",
              "host": ["{{api_base}}"],
              "path": ["companies", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has results', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('results');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Create Company",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Test Company Ltd\",\n    \"description\": \"Test company for API testing\",\n    \"sector\": \"Technology\",\n    \"website\": \"https://testcompany.com\"\n}"
            },
            "url": {
              "raw": "{{api_base}}/companies/",
              "host": ["{{api_base}}"],
              "path": ["companies", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Company created successfully', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData.name).to.eql('Test Company Ltd');",
                  "    pm.globals.set('test_company_id', jsonData.id);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "IPO APIs",
      "item": [
        {
          "name": "Get All IPOs",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{api_base}}/ipos/",
              "host": ["{{api_base}}"],
              "path": ["ipos", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has pagination', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('results');",
                  "    pm.expect(jsonData).to.have.property('count');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Upcoming IPOs",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{api_base}}/ipos/upcoming/",
              "host": ["{{api_base}}"],
              "path": ["ipos", "upcoming", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is array', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Create IPO",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"company\": {{test_company_id}},\n    \"price_band_min\": 100.00,\n    \"price_band_max\": 120.00,\n    \"lot_size\": 100,\n    \"issue_size\": 1000.00,\n    \"fresh_issue\": 600.00,\n    \"offer_for_sale\": 400.00,\n    \"open_date\": \"2024-12-30\",\n    \"close_date\": \"2025-01-02\",\n    \"status\": \"upcoming\",\n    \"issue_type\": \"book_built\",\n    \"exchange\": \"both\"\n}"
            },
            "url": {
              "raw": "{{api_base}}/ipos/",
              "host": ["{{api_base}}"],
              "path": ["ipos", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('IPO created successfully', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.globals.set('test_ipo_id', jsonData.id);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Filter IPOs by Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{api_base}}/ipos/?status=upcoming",
              "host": ["{{api_base}}"],
              "path": ["ipos", ""],
              "query": [
                {
                  "key": "status",
                  "value": "upcoming"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Filtered results returned', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('results');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Search IPOs",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{api_base}}/ipos/?search=test",
              "host": ["{{api_base}}"],
              "path": ["ipos", ""],
              "query": [
                {
                  "key": "search",
                  "value": "test"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Search results returned', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('results');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Update IPO Status",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"status\": \"ongoing\"\n}"
            },
            "url": {
              "raw": "{{api_base}}/ipos/{{test_ipo_id}}/update_status/",
              "host": ["{{api_base}}"],
              "path": ["ipos", "{{test_ipo_id}}", "update_status", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Status updated successfully', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.eql('ongoing');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete Test IPO",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{api_base}}/ipos/{{test_ipo_id}}/",
              "host": ["{{api_base}}"],
              "path": ["ipos", "{{test_ipo_id}}", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": ["pm.test('Status code is 204', function () {", "    pm.response.to.have.status(204);", "});"]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Cleanup",
      "item": [
        {
          "name": "Delete Test Company",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{api_base}}/companies/{{test_company_id}}/",
              "host": ["{{api_base}}"],
              "path": ["companies", "{{test_company_id}}", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": ["pm.test('Status code is 204', function () {", "    pm.response.to.have.status(204);", "});"]
              }
            }
          ]
        }
      ]
    }
  ]
}
